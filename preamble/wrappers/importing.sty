% OpenLogic Project
% Package for importing subfiles

\NeedsTeXFormat{LaTeX2e}

\ProvidesFile{importing.sty}



% olfilepath -- holds the path of the currently processed file
% relative to the main input file.

\def\olfilebase{}
\edef\olfilename{\jobname.tex}



% olimport -- import a text. First optional argument is subdirectory,
% if present subimport #1/#2, no optional argument: just \subfile it.
% Starred version interprets #1 as relative to main O-L directory
% \olpath/content/.  When asking for a file from a subdirectory, change
% \olfilepath accordingly. This happens within a group, so \olfilepath
% reverts to its original content after the \subfile.  Second optional
% argument is name of sectioning command to use for \olsection.  Use
% ``nosection'' to supress sectioning, ``subsection'' to make it a
% subsection instead of a section, etc..

% test if we're using subfiles.sty > v1.3
\@ifpackagelater{subfiles}{2019/09/27}
	{\let\subfileswitch\@firstoftwo}
	{\let\subfileswitch\@secondoftwo}

\DeclareDocumentCommand \olimport { s o m o }{%
	\begingroup%
		\IfNoValueTF{#4}%
			{\def \ol@sectioncs{section}}%
			{\def \ol@sectioncs{#4}}%
		\IfNoValueTF{#2}%
		{% no optional path
			\def\olfilename{#3}%
			% as of v1.3 subfiles uses the import package so no longer need
			% to keep track of which directory we're in!
			\subfileswitch{%
				\subfile{#3}%
			}{%
				\subfile{\olfilebase #3}%
			}%
		}{% optional path
			\def \olfilename{#3}%
			\IfBooleanTF{#1}%
			{% starred: path is relative to OLP/content directory
				\edef \olfilebase{\olpath/content/#2/}
				\subfile{\olfilebase #3}%
			}{%
				\edef \olfilebase{\olfilebase #2/}%
				% as of v1.3 subfiles uses the import package so no longer need
				% to keep track of which directory we're in!
				\subfileswitch{%
					\subfile{#2/#3}%
				}{%
					\subfile{\olfilebase #3}%
				}%
			}%
		}%
	\endgroup%
}